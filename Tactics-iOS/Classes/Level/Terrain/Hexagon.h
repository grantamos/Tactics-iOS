//
//  Hexagon.h
//  Tactics-iOS
//
//  Created by Amos, Grant ext (E IT S MCC) on 6/22/14.
//  Copyright (c) 2014 SomethingCool. All rights reserved.
//

#ifndef Tactics_iOS_Hexagon_h
#define Tactics_iOS_Hexagon_h

const int _hexagon_vertex_count = 26;
const int _hexagon_normal_count = 26;
const int _hexagon_texture_coord_count = 26;
const int _hexagon_index_count = 24;

float _hexagon_vertices[] = {
    //Bottom hex
    0            , 0.0,  0.0,
    0.86602540378, 0.0,  0.5,
    0.0          , 0.0,  1.0,
   -0.86602540378, 0.0,  0.5,
   -0.86602540378, 0.0, -0.5,
    0.0          , 0.0, -1.0,
    0.86602540378, 0.0, -0.5,
    
    //Top hex
    0            , 2.0,  0.0,
    0.86602540378, 2.0,  0.5,
    0.0          , 2.0,  1.0,
   -0.86602540378, 2.0,  0.5,
   -0.86602540378, 2.0, -0.5,
    0.0          , 2.0, -1.0,
    0.86602540378, 2.0, -0.5,
    
    //Bottom hex side verts
    0.86602540378, 0.0,  0.5,
    0.0          , 0.0,  1.0,
   -0.86602540378, 0.0,  0.5,
   -0.86602540378, 0.0, -0.5,
    0.0          , 0.0, -1.0,
    0.86602540378, 0.0, -0.5,
    
    //Top hex side verts
    0.86602540378, 2.0,  0.5,
    0.0          , 2.0,  1.0,
   -0.86602540378, 2.0,  0.5,
   -0.86602540378, 2.0, -0.5,
    0.0          , 2.0, -1.0,
    0.86602540378, 2.0, -0.5
};

float _hexagon_normals[] = {
    //Bottom hex
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    
    //Top hex
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    
    //Bottom hex side normals
    0.86602540378, 0.0,  0.5,
    0.0          , 0.0,  1.0,
   -0.86602540378, 0.0,  0.5,
   -0.86602540378, 0.0, -0.5,
    0.0          , 0.0, -1.0,
    0.86602540378, 0.0, -0.5,
    
    //Top hex side normals
    0.86602540378, 0.0,  0.5,
    0.0          , 0.0,  1.0,
   -0.86602540378, 0.0,  0.5,
   -0.86602540378, 0.0, -0.5,
    0.0          , 0.0, -1.0,
    0.86602540378, 0.0, -0.5,
};

CGPoint _hexagon_texture_coords[] = {
    //Bottom hex
    0             / 2.0 + 0.5,  0.0 / 2.0 + 0.5,
    0.86602540378 / 2.0 + 0.5,  0.5 / 2.0 + 0.5,
    0.0           / 2.0 + 0.5,  1.0 / 2.0 + 0.5,
   -0.86602540378 / 2.0 + 0.5,  0.5 / 2.0 + 0.5,
   -0.86602540378 / 2.0 + 0.5, -0.5 / 2.0 + 0.5,
    0.0           / 2.0 + 0.5, -1.0 / 2.0 + 0.5,
    0.86602540378 / 2.0 + 0.5, -0.5 / 2.0 + 0.5,
    
    //Top hex
    0             / 2.0 + 0.5,  0.0 / 2.0 + 0.5,
    0.86602540378 / 2.0 + 0.5,  0.5 / 2.0 + 0.5,
    0.0           / 2.0 + 0.5,  1.0 / 2.0 + 0.5,
   -0.86602540378 / 2.0 + 0.5,  0.5 / 2.0 + 0.5,
   -0.86602540378 / 2.0 + 0.5, -0.5 / 2.0 + 0.5,
    0.0           / 2.0 + 0.5, -1.0 / 2.0 + 0.5,
    0.86602540378 / 2.0 + 0.5, -0.5 / 2.0 + 0.5,
    
    //Bottom hex side verts
    0.86602540378 / 2.0 + 0.5,  0.5 / 2.0 + 0.5,
    0.0           / 2.0 + 0.5,  1.0 / 2.0 + 0.5,
   -0.86602540378 / 2.0 + 0.5,  0.5 / 2.0 + 0.5,
   -0.86602540378 / 2.0 + 0.5, -0.5 / 2.0 + 0.5,
    0.0           / 2.0 + 0.5, -1.0 / 2.0 + 0.5,
    0.86602540378 / 2.0 + 0.5, -0.5 / 2.0 + 0.5,
    
    //Top hex side verts
    0.86602540378 / 2.0 + 0.5,  0.5 / 2.0 + 0.5,
    0.0           / 2.0 + 0.5,  1.0 / 2.0 + 0.5,
   -0.86602540378 / 2.0 + 0.5,  0.5 / 2.0 + 0.5,
   -0.86602540378 / 2.0 + 0.5, -0.5 / 2.0 + 0.5,
    0.0           / 2.0 + 0.5, -1.0 / 2.0 + 0.5,
    0.86602540378 / 2.0 + 0.5, -0.5 / 2.0 + 0.5
};

int _hexagon_indices[] = {
    //Bottom hex
    0, 1, 2,
    0, 2, 3,
    0, 3, 4,
    0, 4, 5,
    0, 5, 6,
    0, 6, 1,
    
    //Top hex
    7, 9,  8,
    7, 10, 9,
    7, 11, 10,
    7, 12, 11,
    7, 13, 12,
    7, 8,  13,
    
    //Side A
    20, 15, 14,
    15, 20, 21,
    //Side B
    21, 16, 15,
    16, 21, 22,
    //Side C
    22, 17, 16,
    17, 22, 23,
    //Side D
    23, 18, 17,
    18, 23, 24,
    //Side E
    24, 19, 18,
    19, 24, 25,
    //Side F
    25, 20, 19,
    20, 14, 19
};

#endif
